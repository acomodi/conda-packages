language: c
branches:
  only:
    - master
sudo: false
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - 'libc6:i386'
      - 'libc6-dev:i386'
      - 'gcc-multilib'
      - 'g++-multilib'
      - 'gcc-4.8-multilib'
      - 'g++-4.8-multilib'
      - 'libglib2.0-0:i386' # for pyqt
      - 'libxext6:i386' # for pyqt
      - 'libsm6:i386' # for pyqt
      - 'libxrender1:i386' # for pyqt
env:
  global:
    - ANACONDA_LOGIN=m-labs
    - secure: "EyiShoEa9Qrfr/forlwp74Lzcp/vD+0fJK/Hhmoe2RGrvN1IifgkL3N+0mhAd58xDdruvLHoALP33Uu5Xty0IlMu/xGltEPq+I23EEtfkSyHsmjYOHDjSu37sanpHCMr/sMOI5+kvfEdjW3f324VED24TD9ZuNZ5KHo2Wnq2WLVxTOFBjLrGAxYMGnnGIyHuKGJjeB6lLsnBhYQAf428Mw+aSY/aYcd6sxAHW9mOwfGLLs+ZKusFMnRfP8yzPngXMLdv80aICwLnvXDR3qnOU1vJP4WW13d5a44/cuufD4oQnE+RXdNyb6TBwxTuJIKWqj8/z2b8vxLC+a7S9Q5uiAy0ASsCqLADmma4H5XcnXaeWIFBYt7psx+CtnrZCffpHK1KJtpb8NgdZK8WbNwMwWZXqfs/KwJ+CGpdr9h5fiBmyMIQe29QLCSL5no6ZgT6LKuDdP6eIZ23ehOcZkw5s9bI6tA19U0MRgDlYVttC6aVqmPmDGTjiz3/327iySPeu1nLEhGlNX7nBEIeF4ewuaJvBXnaqFnh8hRWVswXBUkoMEWOVqfP3Ag3VeRtzzmpe+CmLjA340/Lj6hXfvgMdcTL1QzVGM+P88RT2UmzAZB1aUCCXMpAH3iUQamKxnkDIyPtZ98KtQCJT9VthkAhFIz0tZmZh+whD2vcx3qDyQc="
    - secure: "WQMym4WCaRXOiebMwmh//v4JlD19DnHaJO5XlXN2ZLqksaGHyHgntfEB+Yj0fvK2eGa6gBQrx3eAgVANqH3/BWb7ObaBxHNRcUnchE9S/rYwlLgMdI8u7p0/nBqVx2CuUXMlN5XzyUU8T2oUtqQozs5u+fe0bMWrWYocnlgh22co0Hcv8/EgFINEfqqJJywoIYsV/Y+/jqZRetPKBmR52EP2iqlr3zz80SeACSTXgvaed9L4ysG6ONKfQIrXdJqeSrB4fhNj11VDNCMermVnx6LqnrdaPVGhZP6rJcEV5VqLJspKcSS8W6wKJNTyb1/J3O9M7XvFUlCPdpjBH6hhznf2vvpjwoW7WdPLegKsyv6CM4J2vkXGkqNgGYpmeifTNvijc4k7p34Km3saQD19Q+jam5l9Y0y68wiq3D9jj/tvKgVjzw1u87L+Eoyx+LrjpT/DPlBHAzoX1PONZ7G4fRSCH3lckb+qpd7ElLIplnlSWGNOz/3fJr6jbRcQwzXN/XZq9h131ZSiLXMU6qIroUkka/7m3/HZVGponk2Hx98Ido2Z+56omwzZJ3KYvgJe0S5bE7cF+OgNHM4WfeRCBp2PUmxlRqAucVXat/Al12JTnuNdBOpvRkO8o9w+wchJ0ijjv9B/qzZu9pmQVFEusZugb85ZIGkmjZ7/AjOL/nE="
  matrix:
    - PYTHON_VERSION=3.5 TARGET=linux-32 TAG=travis-32
    - PYTHON_VERSION=3.5 TARGET=linux-64 TAG=travis-64
install:
  - |
    export PATH=~/miniconda/bin:$PATH
    if [ "$TARGET" = "linux-64" ]; then
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      bash miniconda.sh -b -p ~/miniconda
    elif [ "$TARGET" = "linux-32" ]; then
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86.sh -O miniconda.sh
      echo yes | bash miniconda.sh -b -p ~/miniconda
    fi
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda install conda-build jinja2 anaconda-client
  - conda config --add channels https://conda.anaconda.org/m-labs/channel/main
  - conda config --set anaconda_upload yes
  - conda info -a
  - echo y | anaconda -q login --hostname travis-$TRAVIS_JOB_ID --username $ANACONDA_LOGIN --password $ANACONDA_PASSWORD
script: |
  PACKAGES=$(git diff --raw $TAG...HEAD \
            | awk 'match($0, /[MA]\t(conda\/.+?)\//, r) { print r[1] }' \
            | uniq)
  echo "Packages to build: $PACKAGES"
  if [ "$PACKAGES" != "" ]; then
    if [ "$TARGET" = "linux-64" ]; then
      conda build $PACKAGES --python $PYTHON_VERSION
    elif [ "$TARGET" = "linux-32" ]; then
      i386 conda build $PACKAGES --python $PYTHON_VERSION
    fi
  fi
after_script:
  - anaconda -q logout
after_success:
  - git tag -d $TAG
  - git tag $TAG
  - git push https://whitequark:$GITHUB_API_KEY@github.com/m-labs/conda-recipes $TAG --force
notifications:
  irc:
    channels:
      - chat.freenode.net#m-labs
    template:
      - "%{repository}#%{build_number} (%{branch} - %{commit} : %{author}): %{message}"
      - "Build details : %{build_url}"
    on_success: never
